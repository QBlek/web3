TruffleContract {
  constructor: [Function: TruffleContract] {
    _constructorMethods: {
      configureNetwork: [Function: configureNetwork],
      setProvider: [Function: setProvider],
      new: [Function: new],
      at: [AsyncFunction: at],
      deployed: [AsyncFunction: deployed],
      defaults: [Function: defaults],
      hasNetwork: [Function: hasNetwork],
      isDeployed: [Function: isDeployed],
      detectNetwork: [AsyncFunction: detectNetwork],
      setNetwork: [Function: setNetwork],
      setNetworkType: [Function: setNetworkType],
      setWallet: [Function: setWallet],
      resetAddress: [Function: resetAddress],
      link: [Function: link],
      clone: [Function: clone],
      addProp: [Function: addProp],
      toJSON: [Function: toJSON],
      decodeLogs: [Function: decodeLogs]
    },
    _properties: {
      contract_name: [Object],
      contractName: [Object],
      gasMultiplier: [Object],
      timeoutBlocks: [Object],
      autoGas: [Object],
      numberFormat: [Object],
      abi: [Object],
      metadata: [Function: metadata],
      network: [Function: network],
      networks: [Function: networks],
      address: [Object],
      transactionHash: [Object],
      links: [Function: links],
      events: [Function: events],
      binary: [Function: binary],
      deployedBinary: [Function: deployedBinary],
      unlinked_binary: [Object],
      bytecode: [Object],
      deployedBytecode: [Object],
      sourceMap: [Object],
      deployedSourceMap: [Object],
      source: [Object],
      sourcePath: [Object],
      legacyAST: [Object],
      ast: [Object],
      compiler: [Object],
      schema_version: [Function: schema_version],
      schemaVersion: [Function: schemaVersion],
      updated_at: [Function: updated_at],
      updatedAt: [Function: updatedAt],
      userdoc: [Function: userdoc],
      devdoc: [Function: devdoc],
      networkType: [Object],
      immutableReferences: [Object],
      generatedSources: [Object],
      deployedGeneratedSources: [Object],
      db: [Object]
    },
    _property_values: {},
    _json: {
      contractName: 'BankAccount_v2',
      abi: [Array],
      metadata: '{"compiler":{"version":"0.8.19+commit.7dd6d404"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_address","type":"address"},{"indexed":false,"internalType":"uint256","name":"_value","type":"uint256"}],"name":"Info","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"_notif","type":"string"}],"name":"Log","type":"event"},{"inputs":[],"name":"balance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"faultedFunc","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"faultedFunc","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"redeemRequested","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rewardPoint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"serverConfirm","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"serverConfirmRedeeming","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"state","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"transferSuccess","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"useReward","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"project:/contracts/BankAccount_v2.sol":"BankAccount_v2"},"evmVersion":"paris","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"project:/contracts/BankAccount.sol":{"keccak256":"0x6131f3249aa163cd4cf3b039d43c763629eaaa294e44a81e9e1608e2f615d902","license":"MIT","urls":["bzz-raw://b3c78bdd969036de460a537706a285e943ea5285e2a710272935e31a77f1a8f1","dweb:/ipfs/QmZ146aW9Dk2bVm7HCCApMxBzxzGT6iQ661PhPPp72P2fB"]},"project:/contracts/BankAccount_v2.sol":{"keccak256":"0x9c709e522a5cd38835b5189a1cc955f1b1dec6b6273e398e9d7c54612733e11c","license":"MIT","urls":["bzz-raw://fbae979cd43721fe4f671af5c06ec9db174804d8876ed5c1509e16385eda27a3","dweb:/ipfs/QmPXeUijjTkq1uoBXV6P162Uzp966n3iKz4PS7TzG1CmNM"]}},"version":1}',
      bytecode: '0x60806040523480156200001157600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060018190555060006002819055506040518060400160405280600681526020017f616374697665000000000000000000000000000000000000000000000000000081525060039081620000a8919062000339565b506001600581905550600060068190555062000420565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200014157607f821691505b602082108103620001575762000156620000f9565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001c17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000182565b620001cd868362000182565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200021a620002146200020e84620001e5565b620001ef565b620001e5565b9050919050565b6000819050919050565b6200023683620001f9565b6200024e620002458262000221565b8484546200018f565b825550505050565b600090565b6200026562000256565b620002728184846200022b565b505050565b5b818110156200029a576200028e6000826200025b565b60018101905062000278565b5050565b601f821115620002e957620002b3816200015d565b620002be8462000172565b81016020851015620002ce578190505b620002e6620002dd8562000172565b83018262000277565b50505b505050565b600082821c905092915050565b60006200030e60001984600802620002ee565b1980831691505092915050565b6000620003298383620002fb565b9150826002028217905092915050565b6200034482620000bf565b67ffffffffffffffff81111562000360576200035f620000ca565b5b6200036c825462000128565b620003798282856200029e565b600060209050601f831160018114620003b157600084156200039c578287015190505b620003a885826200031b565b86555062000418565b601f198416620003c1866200015d565b60005b82811015620003eb57848901518255600182019150602085019450602081019050620003c4565b868310156200040b578489015162000407601f891682620002fb565b8355505b6001600288020188555050505b505050505050565b61171780620004306000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063b69ef8a81161008c578063c68b9dfa11610066578063c68b9dfa146101d7578063d42ccee4146101f5578063ef3078cb14610211578063ef56eff61461021b576100ea565b8063b69ef8a81461017f578063b6b55f251461019d578063c19d93fb146101b9576100ea565b806340546f49116100c857806340546f491461014357806354c47b2f1461014d5780638da5cb5b14610157578063accc5d0714610175576100ea565b806312514bba146100ef57806314168c941461010b5780632e1a7d4d14610127575b600080fd5b61010960048036038101906101049190610b22565b610237565b005b61012560048036038101906101209190610b22565b610263565b005b610141600480360381019061013c9190610b22565b6102a7565b005b61014b610366565b005b610155610370565b005b61015f6103b3565b60405161016c9190610b90565b60405180910390f35b61017d6103d7565b005b61018761041d565b6040516101949190610bba565b60405180910390f35b6101b760048036038101906101b29190610b22565b610423565b005b6101c161050f565b6040516101ce9190610c65565b60405180910390f35b6101df61059d565b6040516101ec9190610bba565b60405180910390f35b61020f600480360381019061020a9190610b22565b6105a3565b005b610219610655565b005b61023560048036038101906102309190610b22565b610667565b005b61023f610681565b80600260008282546102519190610cb6565b9250508190555061026061074d565b50565b60006102a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029b90610d5c565b60405180910390fd5b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610335576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032c90610dc8565b60405180910390fd5b61033d610794565b6005548161034b9190610cb6565b6001600082825461035c9190610de8565b9250508190555050565b61036e6107da565b565b60006103b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a890610d5c565b60405180910390fd5b565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6103df61081d565b6002546001541061040a57600254600160008282546103fe9190610de8565b92505081905550610413565b60006002819055505b61041b6108e9565b565b60015481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a890610dc8565b60405180910390fd5b80600160008282546104c39190610cb6565b925050819055507f2e2a4a34dacfe23211d7cd5f2269b17fe50bc4440e8ac080de1026da21e8007d33826040516104fb929190610e1c565b60405180910390a161050c81610965565b50565b6003805461051c90610e74565b80601f016020809104026020016040519081016040528092919081815260200182805461054890610e74565b80156105955780601f1061056a57610100808354040283529160200191610595565b820191906000526020600020905b81548152906001019060200180831161057857829003601f168201915b505050505081565b60045481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610631576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062890610dc8565b60405180910390fd5b61063961098d565b806004600082825461064b9190610de8565b9250508190555050565b61065d6109d4565b6106656108e9565b565b61066f610681565b8060068190555061067e610aa0565b50565b7f9651c33eb23976f7c15240e86443dc2ded40546fa9ba457a14abab4090e023b560036040516020016106b49190610f48565b6040516020818303038152906040528051906020012003610709577fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab6040516106fc90610fd1565b60405180910390a161074b565b600061074a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107419061103d565b60405180910390fd5b5b565b6040518060400160405280600781526020017f70656e64696e6700000000000000000000000000000000000000000000000000815250600390816107919190611223565b50565b60018054116107d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cf90611367565b60405180910390fd5b565b600061081b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081290610d5c565b60405180910390fd5b565b7fb4d829413f0d2c4d74c8ff63e02c9925119a56008208dd29db841c5f35ed3ad360036040516020016108509190610f48565b60405160208183030381529060405280519060200120036108a5577fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab604051610898906113f9565b60405180910390a16108e7565b60006108e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108dd90611465565b60405180910390fd5b5b565b6040518060400160405280600681526020017f61637469766500000000000000000000000000000000000000000000000000008152506003908161092d9190611223565b507fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab60405161095b906114d1565b60405180910390a1565b600a816109729190611520565b600460008282546109839190610cb6565b9250508190555050565b6005600454116109d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c9906115c3565b60405180910390fd5b565b7f4c7c1f26375a75ff324df30d2b20c1f8eee392f89093003677ca36696914f8536003604051602001610a079190610f48565b6040516020818303038152906040528051906020012003610a5c577fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab604051610a4f90611655565b60405180910390a1610a9e565b6000610a9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a94906116c1565b60405180910390fd5b5b565b6040518060400160405280600981526020017f72656465656d696e67000000000000000000000000000000000000000000000081525060039081610ae49190611223565b50565b600080fd5b6000819050919050565b610aff81610aec565b8114610b0a57600080fd5b50565b600081359050610b1c81610af6565b92915050565b600060208284031215610b3857610b37610ae7565b5b6000610b4684828501610b0d565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b7a82610b4f565b9050919050565b610b8a81610b6f565b82525050565b6000602082019050610ba56000830184610b81565b92915050565b610bb481610aec565b82525050565b6000602082019050610bcf6000830184610bab565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c0f578082015181840152602081019050610bf4565b60008484015250505050565b6000601f19601f8301169050919050565b6000610c3782610bd5565b610c418185610be0565b9350610c51818560208601610bf1565b610c5a81610c1b565b840191505092915050565b60006020820190508181036000830152610c7f8184610c2c565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cc182610aec565b9150610ccc83610aec565b9250828201905080821115610ce457610ce3610c87565b5b92915050565b7f546869732066756e6374696f6e206973206e6f74207573656420696e2074686960008201527f732076657273696f6e202d206279206d6f646966696572000000000000000000602082015250565b6000610d46603783610be0565b9150610d5182610cea565b604082019050919050565b60006020820190508181036000830152610d7581610d39565b9050919050565b7f4f6e6c79206f776e65722063616e2075736520746869732066756e6374696f6e600082015250565b6000610db2602083610be0565b9150610dbd82610d7c565b602082019050919050565b60006020820190508181036000830152610de181610da5565b9050919050565b6000610df382610aec565b9150610dfe83610aec565b9250828203905081811115610e1657610e15610c87565b5b92915050565b6000604082019050610e316000830185610b81565b610e3e6020830184610bab565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610e8c57607f821691505b602082108103610e9f57610e9e610e45565b5b50919050565b600081905092915050565b60008190508160005260206000209050919050565b60008154610ed281610e74565b610edc8186610ea5565b94506001821660008114610ef75760018114610f0c57610f3f565b60ff1983168652811515820286019350610f3f565b610f1585610eb0565b60005b83811015610f3757815481890152600182019150602081019050610f18565b838801955050505b50505092915050565b6000610f548284610ec5565b9150'... 3968 more characters,
      deployedBytecode: '0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063b69ef8a81161008c578063c68b9dfa11610066578063c68b9dfa146101d7578063d42ccee4146101f5578063ef3078cb14610211578063ef56eff61461021b576100ea565b8063b69ef8a81461017f578063b6b55f251461019d578063c19d93fb146101b9576100ea565b806340546f49116100c857806340546f491461014357806354c47b2f1461014d5780638da5cb5b14610157578063accc5d0714610175576100ea565b806312514bba146100ef57806314168c941461010b5780632e1a7d4d14610127575b600080fd5b61010960048036038101906101049190610b22565b610237565b005b61012560048036038101906101209190610b22565b610263565b005b610141600480360381019061013c9190610b22565b6102a7565b005b61014b610366565b005b610155610370565b005b61015f6103b3565b60405161016c9190610b90565b60405180910390f35b61017d6103d7565b005b61018761041d565b6040516101949190610bba565b60405180910390f35b6101b760048036038101906101b29190610b22565b610423565b005b6101c161050f565b6040516101ce9190610c65565b60405180910390f35b6101df61059d565b6040516101ec9190610bba565b60405180910390f35b61020f600480360381019061020a9190610b22565b6105a3565b005b610219610655565b005b61023560048036038101906102309190610b22565b610667565b005b61023f610681565b80600260008282546102519190610cb6565b9250508190555061026061074d565b50565b60006102a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029b90610d5c565b60405180910390fd5b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610335576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032c90610dc8565b60405180910390fd5b61033d610794565b6005548161034b9190610cb6565b6001600082825461035c9190610de8565b9250508190555050565b61036e6107da565b565b60006103b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a890610d5c565b60405180910390fd5b565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6103df61081d565b6002546001541061040a57600254600160008282546103fe9190610de8565b92505081905550610413565b60006002819055505b61041b6108e9565b565b60015481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a890610dc8565b60405180910390fd5b80600160008282546104c39190610cb6565b925050819055507f2e2a4a34dacfe23211d7cd5f2269b17fe50bc4440e8ac080de1026da21e8007d33826040516104fb929190610e1c565b60405180910390a161050c81610965565b50565b6003805461051c90610e74565b80601f016020809104026020016040519081016040528092919081815260200182805461054890610e74565b80156105955780601f1061056a57610100808354040283529160200191610595565b820191906000526020600020905b81548152906001019060200180831161057857829003601f168201915b505050505081565b60045481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610631576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062890610dc8565b60405180910390fd5b61063961098d565b806004600082825461064b9190610de8565b9250508190555050565b61065d6109d4565b6106656108e9565b565b61066f610681565b8060068190555061067e610aa0565b50565b7f9651c33eb23976f7c15240e86443dc2ded40546fa9ba457a14abab4090e023b560036040516020016106b49190610f48565b6040516020818303038152906040528051906020012003610709577fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab6040516106fc90610fd1565b60405180910390a161074b565b600061074a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107419061103d565b60405180910390fd5b5b565b6040518060400160405280600781526020017f70656e64696e6700000000000000000000000000000000000000000000000000815250600390816107919190611223565b50565b60018054116107d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cf90611367565b60405180910390fd5b565b600061081b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081290610d5c565b60405180910390fd5b565b7fb4d829413f0d2c4d74c8ff63e02c9925119a56008208dd29db841c5f35ed3ad360036040516020016108509190610f48565b60405160208183030381529060405280519060200120036108a5577fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab604051610898906113f9565b60405180910390a16108e7565b60006108e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108dd90611465565b60405180910390fd5b5b565b6040518060400160405280600681526020017f61637469766500000000000000000000000000000000000000000000000000008152506003908161092d9190611223565b507fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab60405161095b906114d1565b60405180910390a1565b600a816109729190611520565b600460008282546109839190610cb6565b9250508190555050565b6005600454116109d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c9906115c3565b60405180910390fd5b565b7f4c7c1f26375a75ff324df30d2b20c1f8eee392f89093003677ca36696914f8536003604051602001610a079190610f48565b6040516020818303038152906040528051906020012003610a5c577fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab604051610a4f90611655565b60405180910390a1610a9e565b6000610a9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a94906116c1565b60405180910390fd5b5b565b6040518060400160405280600981526020017f72656465656d696e67000000000000000000000000000000000000000000000081525060039081610ae49190611223565b50565b600080fd5b6000819050919050565b610aff81610aec565b8114610b0a57600080fd5b50565b600081359050610b1c81610af6565b92915050565b600060208284031215610b3857610b37610ae7565b5b6000610b4684828501610b0d565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b7a82610b4f565b9050919050565b610b8a81610b6f565b82525050565b6000602082019050610ba56000830184610b81565b92915050565b610bb481610aec565b82525050565b6000602082019050610bcf6000830184610bab565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c0f578082015181840152602081019050610bf4565b60008484015250505050565b6000601f19601f8301169050919050565b6000610c3782610bd5565b610c418185610be0565b9350610c51818560208601610bf1565b610c5a81610c1b565b840191505092915050565b60006020820190508181036000830152610c7f8184610c2c565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cc182610aec565b9150610ccc83610aec565b9250828201905080821115610ce457610ce3610c87565b5b92915050565b7f546869732066756e6374696f6e206973206e6f74207573656420696e2074686960008201527f732076657273696f6e202d206279206d6f646966696572000000000000000000602082015250565b6000610d46603783610be0565b9150610d5182610cea565b604082019050919050565b60006020820190508181036000830152610d7581610d39565b9050919050565b7f4f6e6c79206f776e65722063616e2075736520746869732066756e6374696f6e600082015250565b6000610db2602083610be0565b9150610dbd82610d7c565b602082019050919050565b60006020820190508181036000830152610de181610da5565b9050919050565b6000610df382610aec565b9150610dfe83610aec565b9250828203905081811115610e1657610e15610c87565b5b92915050565b6000604082019050610e316000830185610b81565b610e3e6020830184610bab565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610e8c57607f821691505b602082108103610e9f57610e9e610e45565b5b50919050565b600081905092915050565b60008190508160005260206000209050919050565b60008154610ed281610e74565b610edc8186610ea5565b94506001821660008114610ef75760018114610f0c57610f3f565b60ff1983168652811515820286019350610f3f565b610f1585610eb0565b60005b83811015610f3757815481890152600182019150602081019050610f18565b838801955050505b50505092915050565b6000610f548284610ec5565b915081905092915050565b7f4163746976652053746174652e2046756e6374696f6e2077696c6c2070726f6360008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000610fbb602383610be0565b9150610fc682610f5f565b604082019050919050565b60006020820190508181036000830152610fea81610fae565b9050919050565b7f4e6f742041637469766520537461746500000000000000000000000000000000600082015250565b6000611027601083610be0565b915061103282610ff1565b602082019050919050565b600060208201905081810360008301526110568161101a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020601f8301049050919050565b600082821b905092915050565b6000600883026110d97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261109c565b6110e3868361109c565b95508019841693508086168417925050509392505050565b6000819050919050565b600061112061111b61111684610aec565b6110fb565b610aec565b9050919050565b6000819050919050565b61113a83611105565b61114e61114682611127565b8484546110a9565b825550505050565b600090565b611163611156565b61116e818484611131565b505050565b5b818110156111925761118760008261115b565b600181019050611174565b5050565b601f8211156111d7576111a881610eb0565b6111b18461108c565b810160208510156111c0578190505b6111d46111cc8561108c565b830182611173565b50505b505050565b600082821c905092915050565b60006111fa600019846008026111dc565b1980831691505092915050565b600061121383836111e9565b9150826002028217905092915050565b61122c82610bd5565b67ffffffffffffffff8111156112455761124461105d565b5b61124f8254610e74565b61125a828285611196565b600060209050601f83116001811461128d576000841561127b578287015190505b6112858582611207565b8655506112ed565b601f19841661129b86610eb0565b60005b828110156112c35784890151825560018201915060208501945060208101905061129e565b868310156112e057848901516112dc601f8916826111e9565b8355505b6001600288020188555050505b505050505050565b7f42616c616e6365206d7573742062652067726561746572207468616e2031207460008201527f6f20776974686472617700000000000000000000000000000000000000000000602082015250565b6000611351602a83610be0565b915061135c826112f5565b604082019050919050565b6000602082019050818103600083015261138081611344565b905091905056'... 1824 more characters,
      immutableReferences: {},
      generatedSources: [Array],
      deployedGeneratedSources: [Array],
      sourceMap: '92:3154:1:-:0;;;223:67;;;;;;;;;;299:10:0;291:5;;:18;;;;;;;;;;;;;;;;;;329:1;319:7;:11;;;;351:1;340:8;:12;;;;362:16;;;;;;;;;;;;;;;;;:5;:16;;;;;;:::i;:::-;;259:1:1;248:8;:12;;;;281:1;271:7;:11;;;;92:3154;;7:99:2;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;92:3154:1:-;;;;;;;',
      deployedSourceMap: '92:3154:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2838:144:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1181:73:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;910:173;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1054:136:0;;;:::i;:::-;;3116:72:1;;;:::i;:::-;;85:20:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2680:244:1;;;:::i;:::-;;111:22:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;677:225:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;161:19:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;139:26:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;440:141;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2376:142;;;:::i;:::-;;2222:146;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2838:144:0;2897:18;:16;:18::i;:::-;2937:6;2925:8;;:18;;;;;;;:::i;:::-;;;;;;;;2953:14;:12;:14::i;:::-;2838:144;:::o;1181:73:1:-;468:5:0;460:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;1181::1;:::o;910:173::-;610:5:0;;;;;;;;;;596:19;;:10;:19;;;588:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;992:14:1::1;:12;:14::i;:::-;1038:8;;1028:7;:18;;;;:::i;:::-;1017:7;;:29;;;;;;;:::i;:::-;;;;;;;;910:173:::0;:::o;1054:136:0:-;1158:13;:11;:13::i;:::-;1054:136::o;3116:72:1:-;468:5:0;460:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;3116:72:1:o;85:20:0:-;;;;;;;;;;;;:::o;2680:244:1:-;2739:19;:17;:19::i;:::-;2783:8;;2772:7;;:19;2769:124;;2819:8;;2808:7;;:19;;;;;;;:::i;:::-;;;;;;;;2769:124;;;2880:1;2869:8;:12;;;;2769:124;2903:13;:11;:13::i;:::-;2680:244::o;111:22:0:-;;;;:::o;677:225:1:-;610:5:0;;;;;;;;;;596:19;;:10;:19;;;588:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;785:7:1::1;774;;:18;;;;;;;:::i;:::-;;;;;;;;808:25;813:10;825:7;808:25;;;;;;;:::i;:::-;;;;;;;;844:18;854:7;844:9;:18::i;:::-;677:225:::0;:::o;161:19:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;139:26:1:-;;;;:::o;440:141::-;610:5:0;;;;;;;;;;596:19;;:10;:19;;;588:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;514:15:1::1;:13;:15::i;:::-;566:7;551:11;;:22;;;;;;;:::i;:::-;;;;;;;;440:141:::0;:::o;2376:142::-;2436:21;:19;:21::i;:::-;2497:13;:11;:13::i;:::-;2376:142::o;2222:146::-;2288:18;:16;:18::i;:::-;2327:6;2317:7;:16;;;;2344;:14;:16::i;:::-;2222:146;:::o;1888:279:0:-;1984:19;1973:5;1956:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;1946:34;;;;;;:57;1943:218;;2023:42;;;;;;:::i;:::-;;;;;;;;1943:218;;;2112:5;2104:34;;;;;;;;;;;;:::i;:::-;;;;;;;;;1943:218;1888:279::o;1720:75::-;1771:17;;;;;;;;;;;;;;;;;:5;:17;;;;;;:::i;:::-;;1720:75::o;1503:134:1:-;1581:1;1571:7;;:11;1563:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1503:134::o;1661:69::-;468:5:0;460:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;1661:69:1:o;2173:272:0:-;2270:20;2259:5;2242:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;2232:34;;;;;;:58;2229:210;;2311:43;;;;;;:::i;:::-;;;;;;;;2229:210;;;2401:5;2393:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;2229:210;2173:272::o;2542:130:1:-;2602:16;;;;;;;;;;;;;;;;;:5;:16;;;;;;:::i;:::-;;2634:30;;;;;;:::i;:::-;;;;;;;;2542:130::o;341:91::-;421:2;413:7;:10;;;;:::i;:::-;397:11;;:27;;;;;;;:::i;:::-;;;;;;;;341:91;:::o;1348:131::-;1423:1;1409:11;;:15;1401:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;1348:131::o;1910:298::-;2010:22;1999:5;1982:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;1972:34;;;;;;:60;1969:232;;2053:45;;;;;;:::i;:::-;;;;;;;;1969:232;;;2148:5;2140:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;1969:232;1910:298::o;1821:81::-;1875:19;;;;;;;;;;;;;;;;;:5;:19;;;;;;:::i;:::-;;1821:81::o;88:117:2:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:96::-;1194:7;1223:24;1241:5;1223:24;:::i;:::-;1212:35;;1157:96;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:222::-;1828:4;1866:2;1855:9;1851:18;1843:26;;1879:71;1947:1;1936:9;1932:17;1923:6;1879:71;:::i;:::-;1735:222;;;;:::o;1963:99::-;2015:6;2049:5;2043:12;2033:22;;1963:99;;;:::o;2068:169::-;2152:11;2186:6;2181:3;2174:19;2226:4;2221:3;2217:14;2202:29;;2068:169;;;;:::o;2243:246::-;2324:1;2334:113;2348:6;2345:1;2342:13;2334:113;;;2433:1;2428:3;2424:11;2418:18;2414:1;2409:3;2405:11;2398:39;2370:2;2367:1;2363:10;2358:15;;2334:113;;;2481:1;2472:6;2467:3;2463:16;2456:27;2305:184;2243:246;;;:::o;2495:102::-;2536:6;2587:2;2583:7;2578:2;2571:5;2567:14;2563:28;2553:38;;2495:102;;;:::o;2603:377::-;2691:3;2719:39;2752:5;2719:39;:::i;:::-;2774:71;2838:6;2833:3;2774:71;:::i;:::-;2767:78;;2854:65;2912:6;2907:3;2900:4;2893:5;2889:16;2854:65;:::i;:::-;2944:29;2966:6;2944:29;:::i;:::-;2939:3;2935:39;2928:46;;2695:285;2603:377;;;;:::o;2986:313::-;3099:4;3137:2;3126:9;3122:18;3114:26;;3186:9;3180:4;3176:20;3172:1;3161:9;3157:17;3150:47;3214:78;3287:4;3278:6;3214:78;:::i;:::-;3206:86;;2986:313;;;;:::o;3305:180::-;3353:77;3350:1;3343:88;3450:4;3447:1;3440:15;3474:4;3471:1;3464:15;3491:191;3531:3;3550:20;3568:1;3550:20;:::i;:::-;3545:25;;3584:20;3602:1;3584:20;:::i;:::-;3579:25;;3627:1;3624;3620:9;3613:16;;3648:3;3645:1;3642:10;3639:36;;;3655:18;;:::i;:::-;3639:36;3491:191;;;;:::o;3688:242::-;3828:34;3824:1;3816:6;3812:14;3805:58;3897:25;3892:2;3884:6;3880:15;3873:50;3688:242;:::o;3936:366::-;4078:3;4099:67;4163:2;4158:3;4099:67;:::i;:::-;4092:74;;4175:93;4264:3;4175:93;:::i;:::-;4293:2;4288:3;4284:12;4277:19;;3936:366;;;:::o;4308:419::-;4474:4;4512:2;4501:9;4497:18;4489:26;;4561:9;4555:4;4551:20;4547:1;4536:9;4532:17;4525:47;4589:131;4715:4;4589:131;:::i;:::-;4581:139;;4308:419;;;:::o;4733:182::-;4873:34;4869:1;4861:6;4857:14;4850:58;4733:182;:::o;4921:366::-;5063:3;5084:67;5148:2;5143:3;5084:67;:::i;:::-;5077:74;;5160:93;5249:3;5160:93;:::i;:::-;5278:2;5273:3;5269:12;5262:19;;4921:366;;;:::o;5293:419::-;5459:4;5497:2;5486:9;5482:18;5474:26;;5546:9;5540:4;5536:20;5532:1;5521:9;5517:17;5510:47;5574:131;5700:4;5574:131;:::i;:::-;5566:139;;5293:419;;;:::o;5718:194::-;5758:4;5778:20;5796:1;5778:20;:::i;:::-;5773:25;;5812:20;5830:1;5812:20;:::i;:::-;5807:25;;5856:1;5853;5849:9;5841:17;;5880:1;5874:4;5871:11;5868:37;;;5885:18;;:::i;:::-;5868:37;5718:194;;;;:::o;5918:332::-;6039:4;6077:2;6066:9;6062:18;6054:26;;6090:71;6158:1;6147:9;6143:17;6134:6;6090:71;:::i;:::-;6171:72;6239:2;6228:9;6224:18;6215:6;6171:72;:::i;:::-;5918:332;;;;;:::o;6256:180::-;6304:77;6301:1;6294:88;6401:4;6398:1;6391:15;6425:4;6422:1;6415:15;6442:320;6486:6;6523:1;6517:4;6513:12;6503:22;;6570:1;6564:4;6560:12;6591:18;6581:81;;6647:4;6639:6;6635:17;6625:27;;6581:81;6709:2;6701:6;6698:14;6678:18;6675:38;6672:84;;6728:18;;:::i;:::-;6672:84;6493:269;6442:320;;;:::o;6768:148::-;6870:11;6907:3;6892:18;;6768:148;;;;:::o;6922:141::-;6971:4;6994:3;6986:11;;7017:3;7014:1;7007:14;7051:4;7048:1;7038:18;7030:26;;6922:141;;;:::o;7093:874::-;7196:3;7233:5;7227:12;7262:36;7288:9;7262:36;:::i;:::-;7314:89;7396:6;7391:3;7314:89;:::i;:::-;7307:96;;7434:1;7423:9;7419:17;7450:1;7445:166;;;;7625:1;7620:341;;;;7412:549;;7445:166;7529:4;7525:9;7514;7510:25;7505:3;7498:38;7591:6;7584:14;7577:22;7569:6;7565:35;7560:3;7556:45;7549:52;;7445:166;;7620:341;7687:38;7719:5;7687:38;:::i;:::-;7747:1;7761:154;7775:6;7772:1;7769:13;7761:154;;;7849:7;7843:14;7839:1;7834:3;7830:11;7823:35;7899:1;7890:7;7886:15;7875:26;;7797:4;7794:1;7790:12;7785:17;;7761:154;;;7944:6;7939:3;7935:16;7928:23;;7627:334;;7412:549;;7200:767;;7093:874;;;;:::o;7973:269::-;8102:3;8124:92;8212:3;8203:6;8124:92;:::i;:::-;8117:99;;8233:3;8226:10;;7973:269;;;;:::o;8248:222::-;8388:34;8384:1;8376:6;8372:14;8365:58;8457:5;8452:2;8444:6;8440:15;8433:30;8248:222;:::o;8476:366::-;8618:3;8639:67;8703:2;8698:3;8639:67;:::i;:::-;8632:74;;8715:93;8804:3;8715:93;:::i;:::-;8833:2;8828:3;8824:12;8817:19;;8476:366;;;:::o;8848:419::-;9014:4;9052:2;9041:9;9037:18;9029:26;;9101:9;9095:4;9091:20;9087:1;9076:9;9072:17;9065:47;9129:131;9255:4;9129:131;:::i;:::-;9121:139;;8848:419;;;:::o;9273:166::-;9413:18;9409:1;9401:6;9397:14;9390:42;9273:166;:::o;9445:366::-;9587:3;9608:67;9672:2;9667:3;9608:67;:::i;:::-;9601:74;;9684:93;9773:3;9684:93;:::i;:::-;9802:2;9797:3;9793:12;9786:19;;9445:366;;;:::o;9817:419::-;9983:4;10021:2;10010:9;10006:18;9998:26;;10070:9;10064:4;10060:20;10056:1;10045:9;10041:17;10034:47;10098:131;10224:4;10098:131;:::i;:::-;10090:139;;9817:419;;;:::o;10242:180::-;10290:77;10287:1;10280:88;10387:4;10384:1;10377:15;10411:4;10408:1;10401:15;10428:93;10465:6;10512:2;10507;10500:5;10496:14;10492:23;10482:33;;10428:93;;;:::o;10527:107::-;10571:8;10621:5;10615:4;10611:16;10590:37;;10527:107;;;;:::o;10640:393::-;10709:6;10759:1;10747:10;10743:18;10782:97;10812:66;10801:9;10782:97;:::i;:::-;10900:39;10930:8;10919:9;10900:39;:::i;:::-;10888:51;;10972:4;10968:9;10961:5;10957:21;10948:30;;11021:4;11011:8;11007:19;11000:5;10997:30;10987:40;;10716:317;;10640:393;;;;;:::o;11039:60::-;11067:3;11088:5;11081:12;;11039:60;;;:::o;11105:142::-;11155:9;11188:53;11206:34;11215:24;11233:5;11215:24;:::i;:::-;11206:34;:::i;:::-;11188:53;:::i;:::-;11175:66;;11105:142;;;:::o;11253:75::-;11296:3;11317:5;11310:12;;11253:75;;;:::o;11334:269::-;11444:39;11475:7;11444:39;:::i;:::-;11505:91;11554:41;11578:16;11554:41;:::i;:::-;11546:6;11539:4;11533:11;11505:91;:::i;:::-;11499:4;11492:105;11410:193;11334:269;;;:::o;11609:73::-;11654:3;11609:73;:::o;11688:189::-;11765:32;;:::i;:::-;11806:65;11864:6;11856;11850:4;11806:65;:::i;:::-;11741:136;11688:189;;:::o;11883:186::-;11943:120;11960:3;11953:5;11950:14;11943:120;;;12014:39;12051:1;12044:5;12014:39;:::i;:::-;11987:1;11980:5;11976:13;11967:22;;11943:120;;;11883:186;;:::o;12075:543::-;12176:2;12171:3;12168:11;12165:446;;;12210:38;12242:5;12210:38;:::i;:::-;12294:29;12312:10;12294:29;:::i;:::-;12284:8;12280:44;12477:2;12465:10;12462:18;12459:49;;;12498:8;12483:23;;12459:49;12521:80;12577:22;12595:3;12577:22;:::i'... 4864 more characters,
      source: '// SPDX-License-Identifier: MIT\r\n' +
        'pragma solidity ^0.8.19;\r\n' +
        '\r\n' +
        'import "./BankAccount.sol";\r\n' +
        '\r\n' +
        'contract BankAccount_v2 is BankAccount{\r\n' +
        '\r\n' +
        '    uint256 public rewardPoint;    \r\n' +
        '    uint256 wdCharge;\r\n' +
        '    uint256 redeemM;\r\n' +
        '\r\n' +
        '    constructor() {\r\n' +
        '        wdCharge = 1;\r\n' +
        '        redeemM = 0;\r\n' +
        '    }    \r\n' +
        '\r\n' +
        '\r\n' +
        '    //add function (new function)\r\n' +
        '\r\n' +
        '    function addReward(uint256 _amount) internal {\r\n' +
        '        rewardPoint += (_amount/10);\r\n' +
        '    }\r\n' +
        '\r\n' +
        '    function useReward(uint256 _amount) virtual public onlyOwner() {\r\n' +
        '        ruleUseReward(); //codition\r\n' +
        '        rewardPoint -= _amount;\r\n' +
        '    }\r\n' +
        '\r\n' +
        '\r\n' +
        '    ///////////////////////////////////////////////\r\n' +
        '\r\n' +
        '    \r\n' +
        '    //change function\r\n' +
        '\r\n' +
        '    function deposit(uint256 _amount) virtual public override onlyOwner() {                \r\n' +
        '        balance += _amount;\r\n' +
        '        emit Info(msg.sender, _amount);\r\n' +
        '        addReward(_amount); //get reward point when deposit\r\n' +
        '    }\r\n' +
        '\r\n' +
        '    function withdraw(uint256 _amount) virtual public override onlyOwner() {\r\n' +
        '        ruleWithdraw();\r\n' +
        '        balance -= _amount + wdCharge; // need charge when withdraw\r\n' +
        '    }\r\n' +
        '\r\n' +
        '    ///////////////////////////////////////////////\r\n' +
        '    \r\n' +
        '\r\n' +
        '    //delete function\r\n' +
        '    \r\n' +
        '    function faultedFunc(uint256 _amount) public notUsing(){\r\n' +
        '        \r\n' +
        '    }\r\n' +
        '\r\n' +
        '    ///////////////////////////////////////////////\r\n' +
        '\r\n' +
        '    //codition\r\n' +
        '\r\n' +
        '    //add\r\n' +
        '\r\n' +
        '    function ruleUseReward() virtual internal {\r\n' +
        '        require(rewardPoint > 5, "Reward Point must be greater than 5 to use");\r\n' +
        '    }\r\n' +
        '\r\n' +
        '    //change\r\n' +
        '\r\n' +
        '    function ruleWithdraw() virtual internal override{\r\n' +
        '        require(balance > 1, "Balance must be greater than 1 to withdraw");\r\n' +
        '    }\r\n' +
        '\r\n' +
        '    //delete\r\n' +
        '\r\n' +
        '    function faultedCond() virtual internal override notUsing(){\r\n' +
        '\r\n' +
        '    }\r\n' +
        '\r\n' +
        '    ///////////////////////////////////////////////\r\n' +
        '\r\n' +
        '    //state\r\n' +
        '\r\n' +
        '    //add\r\n' +
        '\r\n' +
        '    function stateRedeeming() virtual internal {\r\n' +
        '        state = "redeeming";\r\n' +
        '    }\r\n' +
        '\r\n' +
        '    function checkStateRedeeming() virtual internal {\r\n' +
        '        if(keccak256(abi.encodePacked(state)) == keccak256("redeeming")){\r\n' +
        '            emit Log("Redeeming State. Function will process");\r\n' +
        '        }\r\n' +
        '        else {\r\n' +
        '            require(false, "Not Redeeming State");            \r\n' +
        '        }\r\n' +
        '    }\r\n' +
        '\r\n' +
        '    \r\n' +
        '    function redeemRequested(uint256 amount) virtual public{\r\n' +
        '        checkStateActive();\r\n' +
        '        redeemM = amount;\r\n' +
        '        stateRedeeming();\r\n' +
        '    }\r\n' +
        '\r\n' +
        '    function serverConfirmRedeeming() virtual public {\r\n' +
        '        checkStateRedeeming();\r\n' +
        '        //server confriming\r\n' +
        '        stateActive();\r\n' +
        '    }\r\n' +
        '\r\n' +
        '    //change\r\n' +
        '\r\n' +
        '    function stateActive() virtual internal override {\r\n' +
        '        state = "active";\r\n' +
        '        emit Log("Current State -> Active");\r\n' +
        '    }\r\n' +
        '\r\n' +
        '    function serverConfirm() virtual public override{\r\n' +
        '        checkStatePending();\r\n' +
        '        if(balance >= pendingM) {\r\n' +
        '            balance -= pendingM;\r\n' +
        '        }\r\n' +
        '        else {\r\n' +
        '            pendingM = 0;\r\n' +
        '        }\r\n' +
        '        stateActive();\r\n' +
        '    }\r\n' +
        '\r\n' +
        '    //delete\r\n' +
        '\r\n' +
        '    function stateConfirming() virtual internal override notUsing(){\r\n' +
        '\r\n' +
        '    }\r\n' +
        '\r\n' +
        '    function checkStateConfirming() virtual internal override notUsing(){\r\n' +
        '\r\n' +
        '    }\r\n' +
        '\r\n' +
        '     function transferSuccess() virtual public override notUsing() {\r\n' +
        '\r\n' +
        '    }\r\n' +
        '\r\n' +
        '    ///////////////////////////////////////////////\r\n' +
        '}',
      sourcePath: '/mnt/c/Users/user/vscode_source/BankExample/contracts/BankAccount_v2.sol',
      ast: [Object],
      legacyAST: undefined,
      compiler: [Object],
      networks: [Object],
      schemaVersion: '3.4.16',
      updatedAt: '2023-11-29T19:56:55.601Z',
      networkType: 'ethereum',
      devdoc: [Object],
      userdoc: [Object],
      db: undefined
    },
    configureNetwork: [Function: bound configureNetwork],
    setProvider: [Function: bound setProvider],
    new: [Function: bound new] {
      estimateGas: [Function: bound estimateDeployment],
      request: [Function: bound requestDeployment]
    },
    at: [Function: bound at] AsyncFunction,
    deployed: [Function: bound deployed] AsyncFunction,
    defaults: [Function: bound defaults],
    hasNetwork: [Function: bound hasNetwork],
    isDeployed: [Function: bound isDeployed],
    detectNetwork: [Function: bound detectNetwork] AsyncFunction,
    setNetwork: [Function: bound setNetwork],
    setNetworkType: [Function: bound setNetworkType],
    setWallet: [Function: bound setWallet],
    resetAddress: [Function: bound resetAddress],
    link: [Function: bound link],
    clone: [Function: bound clone],
    addProp: [Function: bound addProp],
    toJSON: [Function: bound toJSON],
    decodeLogs: [Function: bound decodeLogs],
    enums: {},
    class_defaults: { from: '0x32cD93B5680111969ce09fD481f931DC86efe6B4' },
    interfaceAdapter: Web3InterfaceAdapter { web3: [Web3Shim] },
    web3: Web3Shim {
      currentProvider: [Getter/Setter],
      _requestManager: [RequestManager],
      givenProvider: null,
      providers: [Object],
      _provider: [HttpProvider],
      setProvider: [Function (anonymous)],
      setRequestManager: [Function (anonymous)],
      BatchRequest: [Function: bound Batch],
      extend: [Function],
      version: '1.10.0',
      utils: [Object],
      eth: [Eth],
      shh: [Shh],
      bzz: [Bzz],
      networkType: 'ethereum'
    },
    currentProvider: HttpProvider {
      withCredentials: undefined,
      timeout: 0,
      headers: undefined,
      agent: undefined,
      connected: false,
      host: 'http://172.20.240.1:7545',
      httpAgent: [Agent],
      send: [Function (anonymous)],
      request: [Function: bound modifiedRequest] AsyncFunction,
      _alreadyWrapped: true
    },
    network_id: '5777',
    disableConfirmationListener: undefined,
    ens: { enabled: false, registryAddress: undefined }
  },
  methods: {
    'balance()': [Function (anonymous)] {
      call: [Function (anonymous)],
      sendTransaction: [Function (anonymous)],
      estimateGas: [Function (anonymous)],
      request: [Function (anonymous)]
    },
    'owner()': [Function (anonymous)] {
      call: [Function (anonymous)],
      sendTransaction: [Function (anonymous)],
      estimateGas: [Function (anonymous)],
      request: [Function (anonymous)]
    },
    'rewardPoint()': [Function (anonymous)] {
      call: [Function (anonymous)],
      sendTransaction: [Function (anonymous)],
      estimateGas: [Function (anonymous)],
      request: [Function (anonymous)]
    },
    'state()': [Function (anonymous)] {
      call: [Function (anonymous)],
      sendTransaction: [Function (anonymous)],
      estimateGas: [Function (anonymous)],
      request: [Function (anonymous)]
    },
    'transfer(uint256)': [Function (anonymous)] {
      call: [Function (anonymous)],
      sendTransaction: [Function (anonymous)],
      estimateGas: [Function (anonymous)],
      request: [Function (anonymous)]
    },
    'useReward(uint256)': [Function (anonymous)] {
      call: [Function (anonymous)],
      sendTransaction: [Function (anonymous)],
      estimateGas: [Function (anonymous)],
      request: [Function (anonymous)]
    },
    'deposit(uint256)': [Function (anonymous)] {
      call: [Function (anonymous)],
      sendTransaction: [Function (anonymous)],
      estimateGas: [Function (anonymous)],
      request: [Function (anonymous)]
    },
    'withdraw(uint256)': [Function (anonymous)] {
      call: [Function (anonymous)],
      sendTransaction: [Function (anonymous)],
      estimateGas: [Function (anonymous)],
      request: [Function (anonymous)]
    },
    'faultedFunc(uint256)': [Function (anonymous)] {
      call: [Function (anonymous)],
      sendTransaction: [Function (anonymous)],
      estimateGas: [Function (anonymous)],
      request: [Function (anonymous)]
    },
    'faultedFunc()': [Function (anonymous)] {
      call: [Function (anonymous)],
      sendTransaction: [Function (anonymous)],
      estimateGas: [Function (anonymous)],
      request: [Function (anonymous)]
    },
    'redeemRequested(uint256)': [Function (anonymous)] {
      call: [Function (anonymous)],
      sendTransaction: [Function (anonymous)],
      estimateGas: [Function (anonymous)],
      request: [Function (anonymous)]
    },
    'serverConfirmRedeeming()': [Function (anonymous)] {
      call: [Function (anonymous)],
      sendTransaction: [Function (anonymous)],
      estimateGas: [Function (anonymous)],
      request: [Function (anonymous)]
    },
    'serverConfirm()': [Function (anonymous)] {
      call: [Function (anonymous)],
      sendTransaction: [Function (anonymous)],
      estimateGas: [Function (anonymous)],
      request: [Function (anonymous)]
    },
    'transferSuccess()': [Function (anonymous)] {
      call: [Function (anonymous)],
      sendTransaction: [Function (anonymous)],
      estimateGas: [Function (anonymous)],
      request: [Function (anonymous)]
    }
  },
  abi: [
    {
      inputs: [],
      stateMutability: 'nonpayable',
      type: 'constructor',
      constant: undefined,
      payable: undefined
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Info',
      type: 'event',
      constant: undefined,
      payable: undefined,
      signature: '0x2e2a4a34dacfe23211d7cd5f2269b17fe50bc4440e8ac080de1026da21e8007d'
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'Log',
      type: 'event',
      constant: undefined,
      payable: undefined,
      signature: '0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab'
    },
    {
      inputs: [],
      name: 'balance',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function',
      constant: true,
      payable: undefined,
      signature: '0xb69ef8a8'
    },
    {
      inputs: [],
      name: 'owner',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function',
      constant: true,
      payable: undefined,
      signature: '0x8da5cb5b'
    },
    {
      inputs: [],
      name: 'rewardPoint',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function',
      constant: true,
      payable: undefined,
      signature: '0xc68b9dfa'
    },
    {
      inputs: [],
      name: 'state',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function',
      constant: true,
      payable: undefined,
      signature: '0xc19d93fb'
    },
    {
      inputs: [Array],
      name: 'transfer',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
      constant: undefined,
      payable: undefined,
      signature: '0x12514bba'
    },
    {
      inputs: [Array],
      name: 'useReward',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
      constant: undefined,
      payable: undefined,
      signature: '0xd42ccee4'
    },
    {
      inputs: [Array],
      name: 'deposit',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
      constant: undefined,
      payable: undefined,
      signature: '0xb6b55f25'
    },
    {
      inputs: [Array],
      name: 'withdraw',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
      constant: undefined,
      payable: undefined,
      signature: '0x2e1a7d4d'
    },
    {
      inputs: [Array],
      name: 'faultedFunc',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
      constant: undefined,
      payable: undefined,
      signature: '0x14168c94'
    },
    {
      inputs: [],
      name: 'faultedFunc',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
      constant: undefined,
      payable: undefined,
      signature: '0x40546f49'
    },
    {
      inputs: [Array],
      name: 'redeemRequested',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
      constant: undefined,
      payable: undefined,
      signature: '0xef56eff6'
    },
    {
      inputs: [],
      name: 'serverConfirmRedeeming',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
      constant: undefined,
      payable: undefined,
      signature: '0xef3078cb'
    },
    {
      inputs: [],
      name: 'serverConfirm',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
      constant: undefined,
      payable: undefined,
      signature: '0xaccc5d07'
    },
    {
      inputs: [],
      name: 'transferSuccess',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
      constant: undefined,
      payable: undefined,
      signature: '0x54c47b2f'
    }
  ],
  address: '0xc77c3578CADc4288f15413092640FE2D76eaEf47',
  transactionHash: undefined,
  contract: Contract {
    setProvider: [Function (anonymous)],
    currentProvider: [Getter/Setter],
    _requestManager: RequestManager {
      provider: [HttpProvider],
      providers: [Object],
      subscriptions: Map(0) {}
    },
    givenProvider: null,
    providers: {
      WebsocketProvider: [Function: WebsocketProvider],
      HttpProvider: [Function: HttpProvider],
      IpcProvider: [Function: IpcProvider]
    },
    _provider: HttpProvider {
      withCredentials: undefined,
      timeout: 0,
      headers: undefined,
      agent: undefined,
      connected: false,
      host: 'http://172.20.240.1:7545',
      httpAgent: [Agent],
      send: [Function (anonymous)],
      request: [Function: bound modifiedRequest] AsyncFunction,
      _alreadyWrapped: true
    },
    setRequestManager: [Function (anonymous)],
    BatchRequest: [Function: bound Batch],
    extend: [Function: ex] {
      formatters: [Object],
      utils: [Object],
      Method: [Function: Method]
    },
    clearSubscriptions: [Function (anonymous)],
    options: { address: [Getter/Setter], jsonInterface: [Getter/Setter] },
    handleRevert: [Getter/Setter],
    defaultCommon: [Getter/Setter],
    defaultHardfork: [Getter/Setter],
    defaultChain: [Getter/Setter],
    transactionPollingTimeout: [Getter/Setter],
    transactionPollingInterval: [Getter/Setter],
    transactionConfirmationBlocks: [Getter/Setter],
    transactionBlockTimeout: [Getter/Setter],
    blockHeaderTimeout: [Getter/Setter],
    defaultAccount: [Getter/Setter],
    defaultBlock: [Getter/Setter],
    methods: {
      balance: [Function: bound _createTxObject],
      '0xb69ef8a8': [Function: bound _createTxObject],
      'balance()': [Function: bound _createTxObject],
      owner: [Function: bound _createTxObject],
      '0x8da5cb5b': [Function: bound _createTxObject],
      'owner()': [Function: bound _createTxObject],
      rewardPoint: [Function: bound _createTxObject],
      '0xc68b9dfa': [Function: bound _createTxObject],
      'rewardPoint()': [Function: bound _createTxObject],
      state: [Function: bound _createTxObject],
      '0xc19d93fb': [Function: bound _createTxObject],
      'state()': [Function: bound _createTxObject],
      transfer: [Function: bound _createTxObject],
      '0x12514bba': [Function: bound _createTxObject],
      'transfer(uint256)': [Function: bound _createTxObject],
      useReward: [Function: bound _createTxObject],
      '0xd42ccee4': [Function: bound _createTxObject],
      'useReward(uint256)': [Function: bound _createTxObject],
      deposit: [Function: bound _createTxObject],
      '0xb6b55f25': [Function: bound _createTxObject],
      'deposit(uint256)': [Function: bound _createTxObject],
      withdraw: [Function: bound _createTxObject],
      '0x2e1a7d4d': [Function: bound _createTxObject],
      'withdraw(uint256)': [Function: bound _createTxObject],
      faultedFunc: [Function: bound _createTxObject],
      '0x14168c94': [Function: bound _createTxObject],
      'faultedFunc(uint256)': [Function: bound _createTxObject],
      '0x40546f49': [Function: bound _createTxObject],
      'faultedFunc()': [Function: bound _createTxObject],
      redeemRequested: [Function: bound _createTxObject],
      '0xef56eff6': [Function: bound _createTxObject],
      'redeemRequested(uint256)': [Function: bound _createTxObject],
      serverConfirmRedeeming: [Function: bound _createTxObject],
      '0xef3078cb': [Function: bound _createTxObject],
      'serverConfirmRedeeming()': [Function: bound _createTxObject],
      serverConfirm: [Function: bound _createTxObject],
      '0xaccc5d07': [Function: bound _createTxObject],
      'serverConfirm()': [Function: bound _createTxObject],
      transferSuccess: [Function: bound _createTxObject],
      '0x54c47b2f': [Function: bound _createTxObject],
      'transferSuccess()': [Function: bound _createTxObject]
    },
    events: {
      Info: [Function: bound ],
      '0x2e2a4a34dacfe23211d7cd5f2269b17fe50bc4440e8ac080de1026da21e8007d': [Function: bound ],
      'Info(address,uint256)': [Function: bound ],
      Log: [Function: bound ],
      '0xcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab': [Function: bound ],
      'Log(string)': [Function: bound ],
      allEvents: [Function: bound ]
    },
    _address: '0xc77c3578CADc4288f15413092640FE2D76eaEf47',
    _jsonInterface: [
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object]
    ]
  },
  Info: [Function (anonymous)],
  Log: [Function (anonymous)],
  balance: [Function (anonymous)] {
    call: [Function (anonymous)],
    sendTransaction: [Function (anonymous)],
    estimateGas: [Function (anonymous)],
    request: [Function (anonymous)]
  },
  owner: [Function (anonymous)] {
    call: [Function (anonymous)],
    sendTransaction: [Function (anonymous)],
    estimateGas: [Function (anonymous)],
    request: [Function (anonymous)]
  },
  rewardPoint: [Function (anonymous)] {
    call: [Function (anonymous)],
    sendTransaction: [Function (anonymous)],
    estimateGas: [Function (anonymous)],
    request: [Function (anonymous)]
  },
  state: [Function (anonymous)] {
    call: [Function (anonymous)],
    sendTransaction: [Function (anonymous)],
    estimateGas: [Function (anonymous)],
    request: [Function (anonymous)]
  },
  transfer: [Function (anonymous)] {
    call: [Function (anonymous)],
    sendTransaction: [Function (anonymous)],
    estimateGas: [Function (anonymous)],
    request: [Function (anonymous)]
  },
  useReward: [Function (anonymous)] {
    call: [Function (anonymous)],
    sendTransaction: [Function (anonymous)],
    estimateGas: [Function (anonymous)],
    request: [Function (anonymous)]
  },
  deposit: [Function (anonymous)] {
    call: [Function (anonymous)],
    sendTransaction: [Function (anonymous)],
    estimateGas: [Function (anonymous)],
    request: [Function (anonymous)]
  },
  withdraw: [Function (anonymous)] {
    call: [Function (anonymous)],
    sendTransaction: [Function (anonymous)],
    estimateGas: [Function (anonymous)],
    request: [Function (anonymous)]
  },
  faultedFunc: [Function (anonymous)] {
    call: [Function (anonymous)],
    sendTransaction: [Function (anonymous)],
    estimateGas: [Function (anonymous)],
    request: [Function (anonymous)]
  },
  redeemRequested: [Function (anonymous)] {
    call: [Function (anonymous)],
    sendTransaction: [Function (anonymous)],
    estimateGas: [Function (anonymous)],
    request: [Function (anonymous)]
  },
  serverConfirmRedeeming: [Function (anonymous)] {
    call: [Function (anonymous)],
    sendTransaction: [Function (anonymous)],
    estimateGas: [Function (anonymous)],
    request: [Function (anonymous)]
  },
  serverConfirm: [Function (anonymous)] {
    call: [Function (anonymous)],
    sendTransaction: [Function (anonymous)],
    estimateGas: [Function (anonymous)],
    request: [Function (anonymous)]
  },
  transferSuccess: [Function (anonymous)] {
    call: [Function (anonymous)],
    sendTransaction: [Function (anonymous)],
    estimateGas: [Function (anonymous)],
    request: [Function (anonymous)]
  },
  sendTransaction: [Function (anonymous)],
  estimateGas: [Function (anonymous)],
  call: [Function (anonymous)],
  send: [Function (anonymous)],
  allEvents: [Function (anonymous)],
  getPastEvents: [Function (anonymous)]
}